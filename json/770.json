{"issue":{"title":"[CF 770] 2H Frost Visual Priority + Soul Reaper Bank - Help Requested ","body":" <p>IMPORTANT: If your issue is only occurring with a specific icon, include an export string of the icon in this ticket. Subsequently, if the issue involves an entire group or an entire profile, include the entire export string of the group or profile.</p><p>To get an export string, open the icon editor, and click button labeled \"Import/Export/Backup\". Select the \"To string\" option for the appropriate export type (icon, group, or profile), and then press CTRL+C to copy it to your clipboard.</p><p>FAILURE TO COMPLY WITH THE ABOVE INSTRUCTIONS WILL RESULT IN YOUR TICKET BEING INVALIDATED.</p><p>What steps will reproduce the problem?</p><p>N/A</p><p>What do you expect to happen? What happens instead?</p><p>N/A</p><p>What version of TellMeWhen are you using? (\"The latest\" is not a version)</p><p>TellMeWhen v6.1.5</p><p>Do you have an error log of what happened?</p><p>N/A</p><p>Please provide any additional information below (including any export strings if applicable; see above.)</p><p>I like to use TMW to visually display my priorities for 2H Frost so I can maximize my DPS. Currently, I have the basic rotation (see string below):</p><p>^1^T^SPoint^T ^Sy^F5910978167832487 ^f-46^Sx ^F-4503633223744722^f-52 ^t^SOnlyInCombat^B ^SEnabled^B ^SColumns^N11 ^SIcons^T ^N1^T ^SType^Sconditionicon ^SConditions^T ^N1^T ^SType^SSPELLCD ^SOperator^S&lt;= ^SName^SSoul~`Reaper ^SLevel^N0.3 ^t^N2^T ^SType^SHEALTH ^SOperator^S&lt;= ^SUnit^STarget ^SLevel^N36 ^t^Sn^N2 ^t^SCustomTex^SSOul~`Reaper ^SEnabled^B ^t^N2^T ^SType^Sconditionicon ^SConditions^T ^N1^T ^SType^SBUFFDUR ^SChecked^B ^SOperator^S~|= ^SName^SKilling~`Machine ^t^N2^T ^SType^SSPELLCD ^SOperator^S&lt;= ^SName^SObliterate ^SLevel^N0.5 ^t^N3^T ^SType^SDEBUFFDUR ^SChecked^B ^SOperator^S~|= ^SUnit^Starget ^SName^SFrost~`Fever ^t^N4^T ^SType^SDEBUFFDUR ^SChecked^B ^SOperator^S~|= ^SUnit^Starget ^SName^SBlood~`Plague ^t^Sn^N4 ^t^SCustomTex^SObliterate ^SEnabled^B ^t^N3^T ^SType^Sconditionicon ^SConditions^T ^N1^T ^SType^SDEBUFFDUR ^SChecked^B ^SUnit^Starget ^SOperator^S&lt;= ^SName^SBlood~`Plague ^SLevel^N2 ^SPrtsBefore^N1 ^t^N2^T ^SType^SDEBUFFDUR ^SChecked^B ^SPrtsAfter^N1 ^SUnit^Starget ^SOperator^S&lt;= ^SName^SFrost~`Fever ^SLevel^N2 ^SAndOr^SOR ^t^N3^T ^SType^SSPELLCD ^SOperator^S&lt;= ^SName^SOutbreak ^SLevel^N0.5 ^t^Sn^N3 ^t^SCustomTex^SOutbreak ^SEnabled^B ^t^N4^T ^SType^Sconditionicon ^SConditions^T ^N1^T ^SType^SDEBUFFDUR ^SChecked^B ^SOperator^S&lt;= ^SUnit^Starget ^SName^SBlood~`Plague ^SLevel^N2 ^t^N2^T ^SType^SSPELLCD ^SOperator^S&lt;= ^SName^SPlague~`Strike ^SLevel^N0.5 ^t^Sn^N2 ^t^SCustomTex^SPlague~`Strike ^SEnabled^B ^t^N5^T ^SType^Sconditionicon ^SConditions^T ^N1^T ^SType^SDEBUFFDUR ^SChecked^B ^SOperator^S&lt;= ^SUnit^Starget ^SName^SFrost~`Fever ^SLevel^N2 ^t^N2^T ^SType^SSPELLCD ^SOperator^S&lt;= ^SName^SHowling~`Blast ^SLevel^N0.5 ^t^Sn^N2 ^t^SCustomTex^SHowling~`Blast ^SEnabled^B ^t^N6^T ^SType^Sconditionicon ^SConditions^T ^N1^T ^SType^SLUA ^SName^S(GetRuneCount(1)+GetRuneCount(2)==2~`or~`GetRuneCount(3)+GetRuneCount(4)==2~`or~`GetRuneCount(5)+GetRuneCount(6)==2) ^t^Sn^N1 ^t^SCustomTex^SObliterate ^SEnabled^B ^t^N7^T ^SType^Sconditionicon ^SConditions^T ^N1^T ^SType^SRUNIC_POWER ^SOperator^S&gt;= ^SLevel^N76 ^t^Sn^N1 ^t^SCustomTex^SFrost~`Strike ^SEnabled^B ^t^N8^T ^SType^Sconditionicon ^SConditions^T ^N1^T ^SType^SBUFFDUR ^SChecked^B ^SOperator^S~|= ^SName^SFreezing~`Fog ^t^Sn^N1 ^t^SCustomTex^SHowling~`Blast ^SEnabled^B ^t^N9^T ^SType^Sconditionicon ^SConditions^T ^N1^T ^SType^SMANAUSABLE ^SName^SFrost~`Strike ^t^Sn^N1 ^t^SCustomTex^SFrost~`Strike ^SEnabled^B ^t^N10^T ^SType^Sconditionicon ^SConditions^T ^N1^T ^SType^SSPELLCD ^SOperator^S&lt;= ^SName^SObliterate ^SLevel^N0.5 ^t^Sn^N1 ^t^SCustomTex^SObliterate ^SEnabled^B ^t^N11^T ^SType^Sconditionicon ^SConditions^T ^N1^T ^SType^SSPELLCD ^SName^SHorn~`of~`Winter ^t^Sn^N1 ^t^SCustomTex^SHorn~`of~`Winter ^SEnabled^B ^t^t^SSecondarySpec^b ^t^N61501^S~`~| ^Sgroup^N1 ^^</p><p>I am looking to add a condition to my rune spending abilities that allows me to bank a Death or Frost rune for Soul Reaper when the target is sub 35% - that is, I want to add a condition that essentially says \"if the target is sub 35% and using this ability would leave me without a Frost or Death rune, then do not show this icon\". I am having some trouble doing this, and think it may be too difficult to input into TMW. I am somewhat familiar with lua, so have been playing around with the lua conditions; but, as far as I can tell I would need to use an if statement in lua, which the lua conditions do not allow for. Any suggestions?</p><p>Also, the lua condition icon says that if I wish to use a condition with more complex functionality I can link to an external lua file. I feel I could program this condition using an external file that uses if, but am not sure how to link to this file. Are there any resources you can link me to so that I can get a better idea of how to accomplish that?</p> \n<br>\n\n> Posted by CurseForge user <a href=\"https://wow.curseforge.com/members/DKFROSTDPS\">DKFROSTDPS</a> | Imported from CurseForge issue <a href=\"https://wow.curseforge.com/projects/tellmewhen/issues/770\">#770</a> | <a href=\"https://github.com/tmw-issue-import/dump/blob/master/html/770.html\">Raw</a>","closed":true,"closed_at":"2013-03-26T07:34:27Z","created_at":"2013-03-20T19:02:59Z","updated_at":"2013-03-26T07:35:44Z","labels":["enhancement","resolved"]},"comments":[{"body":" <p>This should work for what you want (put it as a Lua condition):</p>\r\n<div><div><div>\n\n```\n((GetRuneType(1) == 4 and GetRuneCount(1) or 0) + \r\n(GetRuneType(2) == 4 and GetRuneCount(2) or 0) + \r\n(GetRuneType(3) == 4 and GetRuneCount(3) or 0) + \r\n(GetRuneType(4) == 4 and GetRuneCount(4) or 0) + \r\nGetRuneCount(5) + \r\nGetRuneCount(6)) &gt; 1\r\n\n```\n</div></div>\r\n</div><p>As an export string:\r\n<code>^1^T^SType^Sconditionicon ^SConditions^T ^N1^T ^SType^SLUA ^SName^S((GetRuneType(1) ~`==~`4~`and~`GetRuneCount(1) ~`or~`0)~`+~`(GetRuneType(2) ~`==~`4~`and~`GetRuneCount(2) ~`or~`0)~`+~`(GetRuneType(3) ~`==~`4~`and~`GetRuneCount(3) ~`or~`0)~`+~`(GetRuneType(4) ~`==~`4~`and~`GetRuneCount(4) ~`or~`0)~`+~`GetRuneCount(5) ~`+~`GetRuneCount(6)) ~`&gt;~`1 ^t^Sn^N1 ^t ^SCustomTex^S114866 ^SEnabled^B ^t^N62003^S~`~| ^Sicon^^</code></p>\r\n<p>5 and 6 correspond to your frost runes. 1 and 2 are blood, 3 and 4 are unholy. Switch 5 and 6 with another number pair if you need this for a spec other than frost. <code>GetRuneType(1) == 4</code> checks if that slot is a death rune. Let me know if you need explanations for anything else.</p> <div class=\"project-issue-comment-body-modified\"> <hr> <span class=\"e-infoLabel\">Edited</span><span> <abbr class=\"tip standard-date standard-datetime\" title=\"03 26 2013 02:19:28 (CDT) (UTC-5:00)\" data-epoch=\"1364282368\">Mar 26, 2013</abbr></span> </div> \n<br>\n\n> Posted by CurseForge user <a href=\"https://wow.curseforge.com/members/Cybeloras\">Cybeloras</a>","created_at":"2013-03-23T02:47:25Z"},{"body":" <p>Thanks for your response!</p>\r\n<p>I have one clarifying question about the 4 conditions checking Death Runes. I know a bit about Lua, but am not well versed by any means. I am interested in it though, so would love to know a bit more about this particular statement if you have the time to explain. What does (GetRuneType(1)==4 and GetRuneCount(1) or 0) evaluate to under different conditions? GetRuneType()==x will evaluate to a logical, while GetRuneCount() or 0 are both integers. If I use a statement like the one above, does that essentially say \"if the logical is true, use GetRuneCount(), otherwise use 0\"?</p>\r\n<p>Thanks again for your response - I appreciate it.</p> <div class=\"project-issue-comment-body-modified\"> <hr> <span class=\"e-infoLabel\">Edited</span><span> <abbr class=\"tip standard-date standard-datetime\" title=\"03 26 2013 02:19:12 (CDT) (UTC-5:00)\" data-epoch=\"1364282352\">Mar 26, 2013</abbr></span> </div> \n<br>\n\n> Posted by CurseForge user <a href=\"https://wow.curseforge.com/members/DKFROSTDPS\">DKFROSTDPS</a>","created_at":"2013-03-26T07:18:49Z"},{"body":" <p>Your explanation is spot-on.</p>\r\n<p>if <code>GetRuneType(1) == 4</code> evaluates to true, the return value of <code>GetRuneCount(1)</code> (which is either 1 or 0, indicating if the rune is ready or not) will be used for that whole statement. Execution will never reach the <code>or 0</code> part of the code because both of the first evaluation in the statement (<code>{GetRuneType(1) == 4 and GetRuneCount(1)</code>) evaluated to a non-nil, non-false value.</p>\r\n<p>if <code>GetRuneType(1) == 4</code> evaluates to false, Lua's last-value short-circuit evaluation (<a href=\"http://en.wikipedia.org/wiki/Short-circuit_evaluation\" rel=\"nofollow\">http://en.wikipedia.org/wiki/Short-circuit_evaluation</a>) causes the call to <code>GetRuneCount(1)</code> to be skipped entirely and the evaluation of the statement jumps directly to the <code>or 0</code> part. Since <code>false or 0</code> evaluates to 0, 0 will be used as the result of that statement.</p>\r\n<p>In Lua, only <code>false</code> and <code>nil</code> are considered to be false in conditional evaluation. Some languages treat 0 that way too, but Lua treats it as true.</p> <div class=\"project-issue-comment-body-modified\"> <hr> <span class=\"e-infoLabel\">Edited</span><span> <abbr class=\"tip standard-date standard-datetime\" title=\"03 26 2013 02:35:44 (CDT) (UTC-5:00)\" data-epoch=\"1364283344\">Mar 26, 2013</abbr></span> </div> \n<br>\n\n> Posted by CurseForge user <a href=\"https://wow.curseforge.com/members/Cybeloras\">Cybeloras</a>","created_at":"2013-03-26T07:30:23Z"}]}